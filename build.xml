<?xml version="1.0" encoding="UTF-8"?>
<project name="PDF module" default="build" basedir=".">
    <property name="core-renderer.version" value="2011.04.16" />
    <property name="yahp-internal.version" value="1.3" />
    
    <path id="project.classpath">
        <pathelement path="${play.path}/framework/classes" />
        <fileset dir="${play.path}/framework/lib">
             <include name="*.jar" />
        </fileset>
        <fileset dir="${play.path}/framework">
            <include name="*.jar" />
        </fileset>
        <fileset dir="lib">
            <include name="*.jar" />
        </fileset>
    </path>

    <target name="build" depends="updateLibraries, compile, test" description="Build module">
        <copy todir="tmp/classes">
            <fileset dir="src">
                <include name="**/*.properties" />
                <include name="**/*.xml"/>
                <include name="**/play.plugins" />
                <include name="**/play.static" />
            </fileset>
        </copy>
        <jar destfile="lib/play-pdf.jar" basedir="tmp/classes">
            <manifest>
                <section name="Play">
                    <attribute name="Specification-Title" value="PDF module" />
                </section>
            </manifest>
        </jar>
        <delete dir="tmp" />
    </target>

    <target name="compile" depends="clean">
        <mkdir dir="tmp/classes" />
        <javac srcdir="src" destdir="tmp/classes" target="1.7" debug="true" includeantruntime="false">
            <classpath refid="project.classpath" />
        </javac>
    </target>
    
    <!-- Removes overridden classes from libraries to make sure only the right version is available in the classpath -->
    <target name="updateLibraries">
        <echo>Removing overridden classes from libraries</echo>
        <!-- Uses the 'zip' task instead of the 'jar' task to make sure the manifest is not modified at all-->
        <zip destfile="lib/core-renderer.hacked.jar">
            <zipfileset src="lib/core-renderer-${core-renderer.version}.jar" excludes="org/xhtmlrenderer/swing/NaiveUserAgent.*" />
        </zip>
        <zip destfile="lib/yahp-internal.hacked.jar">
            <zipfileset src="lib/yahp-internal-${yahp-internal.version}.jar" excludes="org/allcolor/yahp/cl/converter/CHtmlToPdfFlyingSaucerTransformer*.*" />
        </zip>
        <delete file="lib/core-renderer-${core-renderer.version}.jar"/>
        <delete file="lib/yahp-internal-${yahp-internal.version}.jar"/>
    </target>

    <target name="clean" description="Remove all temporary files">
        <delete dir="tmp" />
    </target>

    <target name="compile-tests" depends="compile">
        <mkdir dir="tmp/test-classes"/>
        <javac destdir="tmp/test-classes" target="1.7" source="1.7" debug="true">
            <src path="test"/>
            <classpath>
                <path path="tmp/classes"/>
                <path refid="project.classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="test" depends="compile-tests">
        <mkdir dir="tmp/test-results"/>
        <junit maxmemory="64m" haltonfailure="false" failureproperty="tests-failed" fork="true">
            <batchtest todir="tmp/test-results">
                <fileset dir="tmp/test-classes" includes="**/*Test.class" excludes="**/Abstract*"/>
                <formatter type="xml"/>
                <formatter type="plain" usefile="false"/>
            </batchtest>
            <classpath>
                <path path="tmp/classes"/>
                <path path="tmp/test-classes"/>
                <path refid="project.classpath"/>
            </classpath>
        </junit>
        <fail if="tests-failed"/>
    </target>

</project>